;; Auto-generated. Do not edit!


(when (boundp 'beginner_tutorials::ParseFileResult)
  (if (not (find-package "BEGINNER_TUTORIALS"))
    (make-package "BEGINNER_TUTORIALS"))
  (shadow 'ParseFileResult (find-package "BEGINNER_TUTORIALS")))
(unless (find-package "BEGINNER_TUTORIALS::PARSEFILERESULT")
  (make-package "BEGINNER_TUTORIALS::PARSEFILERESULT"))

(in-package "ROS")
;;//! \htmlinclude ParseFileResult.msg.html


(defclass beginner_tutorials::ParseFileResult
  :super ros::object
  :slots (_frame ))

(defmethod beginner_tutorials::ParseFileResult
  (:init
   (&key
    ((:frame __frame) (let (r) (dotimes (i 0) (push "" r)) r))
    )
   (send-super :init)
   (setq _frame __frame)
   self)
  (:frame
   (&optional __frame)
   (if __frame (setq _frame __frame)) _frame)
  (:serialization-length
   ()
   (+
    ;; string[] _frame
    (apply #'+ (mapcar #'(lambda (x) (+ 4 (length x))) _frame)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string[] _frame
     (write-long (length _frame) s)
     (dolist (elem _frame)
       (write-long (length elem) s) (princ elem s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string[] _frame
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _frame (make-list n))
     (dotimes (i n)
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setf (elt _frame i) (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
     ))
   ;;
   self)
  )

(setf (get beginner_tutorials::ParseFileResult :md5sum-) "b55303c7ce58fb6c0ed76cd13a628a1c")
(setf (get beginner_tutorials::ParseFileResult :datatype-) "beginner_tutorials/ParseFileResult")
(setf (get beginner_tutorials::ParseFileResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Result
string[] frame


")



(provide :beginner_tutorials/ParseFileResult "b55303c7ce58fb6c0ed76cd13a628a1c")


